---
description: バグ記録
alwaysApply: true
---
# バグ追跡ルール

このプロジェクトでは、修正したバグをすべて`bugfix.md`に記録します。

## ルール

### バグを修正したとき
1. 修正内容を`bugfix.md`に追記する
2. 以下の形式で記録する：

```markdown
## [修正日時] バグタイプ: 簡潔な説明

**ブランチ**: team-x
**カテゴリ**: ビルドエラー | Lintエラー | 仕様バグ
**修正前の症状**:
- 具体的な症状の説明

**修正内容**:
- ファイル名:行番号 - 修正内容の説明
- 修正前のコード → 修正後のコード

**確認方法**:
- 修正を確認するためのコマンドや手順
```

### bugfix.mdがない場合
- 自動的に新規作成する
- ヘッダーとして `# バグ修正履歴` を追加

## 記録する情報

### ビルドエラーの場合
- エラーメッセージ
- 修正したファイルと行番号
- TypeScriptの型エラーの詳細

### Lintエラーの場合
- ESLintのルール名
- 修正したファイルと行番号
- 修正方法（自動修正 or 手動修正）

### 仕様バグの場合
- README.mdの仕様との差異
- ユーザーから見た症状
- 修正による動作の変更点

## 自動化サポート

修正を行うたびに：
1. 現在のブランチ名を自動取得
2. 修正日時を自動記録
3. 変更されたファイルを自動検出
4. bugfix.mdに自動追記

## 例

```markdown
## 2024-01-15 10:30 ビルドエラー: TetriminoType型エラー

**ブランチ**: team-a
**カテゴリ**: ビルドエラー
**修正前の症状**:
- `Type '"I"' is not assignable to type 'TetriminoType'` エラーが発生

**修正内容**:
- src/types/tetrimino.ts:1 - TetriminoType型に"I"を追加
- `export type TetriminoType = "O" | "T" | "S" | "Z" | "J" | "L";`
- → `export type TetriminoType = "I" | "O" | "T" | "S" | "Z" | "J" | "L";`

**確認方法**:
- `pnpm build` でビルドが成功することを確認
```

## 注意事項

- すべての修正を記録する（小さな修正も含む）
- 修正前の状態を必ず記録する
- 修正後の動作確認方法を明記する
- チーム学習のため、修正の理由や考え方も記載する
